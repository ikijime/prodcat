// Code generated by ent, DO NOT EDIT.

package ent

import (
	"prodcat/ent/attribute"
	"prodcat/ent/attributevariantstring"
	"prodcat/ent/product"
	"prodcat/ent/schema"
	"prodcat/ent/user"
	"prodcat/ent/usersettings"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	attributeFields := schema.Attribute{}.Fields()
	_ = attributeFields
	// attributeDescName is the schema descriptor for name field.
	attributeDescName := attributeFields[0].Descriptor()
	// attribute.NameValidator is a validator for the "name" field. It is called by the builders before save.
	attribute.NameValidator = attributeDescName.Validators[0].(func(string) error)
	attributevariantstringFields := schema.AttributeVariantString{}.Fields()
	_ = attributevariantstringFields
	// attributevariantstringDescValue is the schema descriptor for value field.
	attributevariantstringDescValue := attributevariantstringFields[1].Descriptor()
	// attributevariantstring.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	attributevariantstring.ValueValidator = attributevariantstringDescValue.Validators[0].(func(string) error)
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[2].Descriptor()
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescCreatedAt is the schema descriptor for created_at field.
	productDescCreatedAt := productFields[4].Descriptor()
	// product.DefaultCreatedAt holds the default value on creation for the created_at field.
	product.DefaultCreatedAt = productDescCreatedAt.Default.(time.Time)
	// productDescUpdatedAt is the schema descriptor for updated_at field.
	productDescUpdatedAt := productFields[5].Descriptor()
	// product.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	product.DefaultUpdatedAt = productDescUpdatedAt.Default.(time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescLogin is the schema descriptor for login field.
	userDescLogin := userFields[0].Descriptor()
	// user.LoginValidator is a validator for the "login" field. It is called by the builders before save.
	user.LoginValidator = userDescLogin.Validators[0].(func(string) error)
	// userDescPassword is the schema descriptor for password field.
	userDescPassword := userFields[1].Descriptor()
	// user.PasswordValidator is a validator for the "password" field. It is called by the builders before save.
	user.PasswordValidator = userDescPassword.Validators[0].(func(string) error)
	// userDescPhonenumber is the schema descriptor for phonenumber field.
	userDescPhonenumber := userFields[5].Descriptor()
	// user.PhonenumberValidator is a validator for the "phonenumber" field. It is called by the builders before save.
	user.PhonenumberValidator = userDescPhonenumber.Validators[0].(func(string) error)
	// userDescEmail is the schema descriptor for email field.
	userDescEmail := userFields[6].Descriptor()
	// user.EmailValidator is a validator for the "email" field. It is called by the builders before save.
	user.EmailValidator = userDescEmail.Validators[0].(func(string) error)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userFields[7].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userFields[8].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(time.Time)
	// userDescToken is the schema descriptor for token field.
	userDescToken := userFields[10].Descriptor()
	// user.DefaultToken holds the default value on creation for the token field.
	user.DefaultToken = userDescToken.Default.(string)
	// userDescRefreshToken is the schema descriptor for refresh_token field.
	userDescRefreshToken := userFields[11].Descriptor()
	// user.DefaultRefreshToken holds the default value on creation for the refresh_token field.
	user.DefaultRefreshToken = userDescRefreshToken.Default.(string)
	usersettingsFields := schema.UserSettings{}.Fields()
	_ = usersettingsFields
	// usersettingsDescFrontend is the schema descriptor for frontend field.
	usersettingsDescFrontend := usersettingsFields[0].Descriptor()
	// usersettings.DefaultFrontend holds the default value on creation for the frontend field.
	usersettings.DefaultFrontend = usersettingsDescFrontend.Default.(schema.DefaultSetting)
}
